<?xml version="1.0"?>

<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!DOCTYPE bindings [
  <!ENTITY % checkboxDTD SYSTEM "chrome://browser/locale/checkbox.dtd">
  %checkboxDTD;
]>

<bindings
    xmlns="http://www.mozilla.org/xbl"
    xmlns:xbl="http://www.mozilla.org/xbl"
    xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <binding id="checkbox-toggleswitch" display="xul:box" extends="chrome://global/content/bindings/checkbox.xml#checkbox-baseline">
    <content>
      <xul:hbox>
        <xul:description anonid="offlabel" class="offlabel" value="&checkbox.off.label;" xbl:inherits="value=offlabel"/>
        <xul:description anonid="onlabel" class="onlabel" value="&checkbox.on.label;" xbl:inherits="value=onlabel"/>
        <xul:radiogroup anonid="group" xbl:inherits="disabled">
          <xul:radio type="toggle" anonid="off" class="checkbox-radio-off"/>
          <xul:radio type="toggle" anonid="on" class="checkbox-radio-on"/>
        </xul:radiogroup>
      </xul:hbox>
    </content>
    <implementation>
      <constructor><![CDATA[
        this.setChecked(this.checked);
      ]]></constructor>

      <field name="_group">
        document.getAnonymousElementByAttribute(this, "anonid", "group");
      </field>

      <field name="_on">
        document.getAnonymousElementByAttribute(this, "anonid", "on");
      </field>

      <field name="_onlabel">
        document.getAnonymousElementByAttribute(this, "anonid", "onlabel");
      </field>

      <field name="_off">
        document.getAnonymousElementByAttribute(this, "anonid", "off");
      </field>

      <field name="_offlabel">
        document.getAnonymousElementByAttribute(this, "anonid", "offlabel");
      </field>

      <property name="onlabel"
        onget="return this._onlabel.value"
        onset="this._offlabel.value=val"/>

      <property name="offlabel"
        onget="return this._offlabel.value"
        onset="this._offlabel.value=val"/>

      <method name="setChecked">
        <parameter name="aValue"/>
        <body>
        <![CDATA[
          let change = (aValue != this.checked);

          if (aValue) {
            this.setAttribute("checked", "true");
            this._group.selectedItem = this._on;
          } else {
            this.removeAttribute("checked");
            this._group.selectedItem = this._off;
          }

          if (change) {
            this.fireEvent("CheckboxStateChange");
            this.fireEvent("command");
          }

          return aValue;
        ]]>
        </body>
      </method>

      <method name="fireEvent">
        <parameter name="aName"/>
        <body>
          <![CDATA[
            var event = document.createEvent("Events");
            event.initEvent(aName, true, true);
            this.dispatchEvent(event);
          ]]>
        </body>
      </method>

      <method name="_onClickOrTap">
        <parameter name="aEvent"/>
        <body>
          <![CDATA[
            aEvent.stopPropagation();
            this.setChecked(!this.checked);
          ]]>
        </body>
      </method>
    </implementation>
    <handlers>
      <handler event="click" button="0" phase="capturing">
        <![CDATA[
          this._onClickOrTap(event);
        ]]>
      </handler>
    </handlers>
  </binding>

  <binding id="setting-fulltoggle-bool" extends="chrome://mozapps/content/extensions/setting.xml#setting-bool">
    <implementation>
      <constructor>
        <![CDATA[
          this.input.classList.add("toggleswitch");
        ]]>
      </constructor>
    </implementation>
  </binding>

  <binding id="setting-fulltoggle-boolint" extends="chrome://mozapps/content/extensions/setting.xml#setting-boolint">
    <implementation>
      <constructor>
        <![CDATA[
          this.input.classList.add("toggleswitch");
        ]]>
      </constructor>
    </implementation>
  </binding>

  <binding id="setting-fulltoggle-localized-bool" extends="chrome://mozapps/content/extensions/setting.xml#setting-localized-bool">
    <implementation>
      <constructor>
        <![CDATA[
          this.input.classList.add("toggleswitch");
        ]]>
      </constructor>
    </implementation>
  </binding>
</bindings>
